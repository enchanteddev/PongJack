
class Paddle {
	
	field int x, y, w, h;
	field int max_speed, cur_dir;

	constructor Paddle new(int x_, int y_, int w_, int h_, int max_speed_, int cur_dir_) {
		
		let x = x_;
		let y = y_;
		let w = w_;
		let h = h_;
		let max_speed = max_speed_;
		let cur_dir = cur_dir_;
		return this;
	
	}

	method void set_dir(int dir) {
		let cur_dir = dir;
		return;
	}

	method void draw () {
		
		do Screen.setColor(true);
		do Screen.drawRectangle(x, y, x+w, y+h);
		return;
	}

	method void move () {
		
		if (cur_dir = 1) {
			if (y > 20) {
				do Screen.setColor(false);
				do Screen.drawRectangle(x, (y + h) - (max_speed - 1), x+w, y+h);
				let y = y - max_speed;
				do Screen.setColor(true);
				do Screen.drawRectangle(x, y, x+w, y + (max_speed - 1));			
			}
		}	

		if (cur_dir = -1) {
			if (y < (250 - h)) {
				do Screen.setColor(false);
		 		do Screen.drawRectangle(x, y, x+w, y + (max_speed - 1));
		 		let y = y + max_speed;
		 		do Screen.setColor(true);
		 		do Screen.drawRectangle(x, (y + h) - (max_speed - 1), x+w, y+h);
			}			
		}
		return;
	}


	method int get_x() { return x; }

	method int get_y() { return y; }

	method int get_w() { return w; }

	method int get_h() { return h; }

	method int get_vy() { return 0 - (max_speed * cur_dir); }


	method void dispose () {
		do Memory.deAlloc(this);
		return;
	}

}
